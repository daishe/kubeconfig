name: "Release candidate"

on:
  push:
    tags: # run when non-official semver tag has been introduced (release candidates etc)
      - "v[0-9]+.[0-9]+.[0-9]+-*"

jobs:
  release-candidate:
    name: "Release candidate"
    runs-on: "ubuntu-latest"

    env:
      go_version: 1.16.x

    steps:

    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go_version }}

    - name: "Restore Go modules cache (if possible)"
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}

    - name: "Lint Go code"
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | bash -s -- -b $HOME/go/bin latest
        golangci-lint run -v

    - name: "Test project"
      run: go test -timeout 5m ./...

    - name: "Build project [linux/amd64]"
      run: GOOS=linux GOARCH=amd64 go build -o dist/kubeconfig-linux-amd64 -v .

    - name: "Build project [windows/amd64]"
      run: GOOS=windows GOARCH=amd64 go build -o dist/kubeconfig-windows-amd64.exe -v .

    - name: "Build project [darwin/amd64]"
      run: GOOS=darwin GOARCH=amd64 go build -o dist/kubeconfig-darwin-amd64 -v .

    - name: "Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        files: |
          "LICENSE"
          "dist/*"
